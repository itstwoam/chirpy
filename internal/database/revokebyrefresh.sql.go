// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: revokebyrefresh.sql

package database

import (
	"context"
	"database/sql"
)

const revokeByRefresh = `-- name: RevokeByRefresh :one
UPDATE refresh_tokens
SET revoked_at = $2, updated_at = $2
Where token = $1
RETURNING token, created_at, updated_at, user_id, expires_at, revoked_at
`

type RevokeByRefreshParams struct {
	Token     string       `json:"token"`
	RevokedAt sql.NullTime `json:"revoked_at"`
}

func (q *Queries) RevokeByRefresh(ctx context.Context, arg RevokeByRefreshParams) (RefreshToken, error) {
	row := q.db.QueryRowContext(ctx, revokeByRefresh, arg.Token, arg.RevokedAt)
	var i RefreshToken
	err := row.Scan(
		&i.Token,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.UserID,
		&i.ExpiresAt,
		&i.RevokedAt,
	)
	return i, err
}
